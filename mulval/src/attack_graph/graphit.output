Grammar

    0 $accept: lines $end

    1 lines: /* empty */
    2      | lines line

    3 line: blank_line
    4     | trace_step
    5     | attack_fact
    6     | predicate_type
    7     | fact_metric

    8 blank_line: END_LINE
    9           | SP END_LINE

   10 predicate_type: PRIMITIVE '(' ATOM ',' ATOM ')' '.' END_LINE
   11               | DERIVED '(' ATOM ',' ATOM ')' '.' END_LINE
   12               | META '(' ATOM ',' ATOM ')' '.' END_LINE

   13 fact_metric: METRIC '(' fact ',' metric ')' '.' END_LINE

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

   15 metric: ATOM
   16       | FLOAT
   17       | cvss_metric
   18       | cap_metric

   19 cvss_metric: CVSS_AC '(' ATOM ')'

   20 cap_metric: CAP_LUCK '(' ATOM ')'

   21 attack_fact: ATTACK_TOKEN '(' fact ')' '.' END_LINE

   22 special_char: SP
   23             | '('
   24             | ')'
   25             | '['
   26             | ']'

   27 quoted_name: ATOM
   28            | quoted_name ATOM
   29            | quoted_name special_char

   30 desc: /* empty */
   31     | ATOM
   32     | desc SP ATOM

   33 arglist: factString
   34        | arglist ',' factString

   35 factString: ATOM
   36           | QUOTE quoted_name QUOTE

   37 facts: /* empty */
   38      | fact
   39      | facts ',' fact

   40 fact: ATOM '(' arglist ')'

   41 conjunct: '[' facts ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 11 12 13 14 19 20 21 23 40
')' (41) 10 11 12 13 14 19 20 21 24 40
',' (44) 10 11 12 13 14 34 39
'.' (46) 10 11 12 13 14 21
'[' (91) 25 41
']' (93) 26 41
error (256)
ATTACK_TOKEN (258) 21
TRACESTEP_TOKEN (259) 14
BECAUSE_TOKEN (260) 14
ATOM (261) 10 11 12 14 15 19 20 27 28 31 32 35 40
QUOTE (262) 14 36
SP (263) 9 22 32
END_LINE (264) 8 9 10 11 12 13 14 21
PRIMITIVE (265) 10
DERIVED (266) 11
META (267) 12
METRIC (268) 13
DESC (269) 14
FLOAT (270) 16
CVSS_AC (271) 19
CAP_LUCK (272) 20


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
lines (25)
    on left: 1 2, on right: 0 2
line (26)
    on left: 3 4 5 6 7, on right: 2
blank_line (27)
    on left: 8 9, on right: 3
predicate_type (28)
    on left: 10 11 12, on right: 6
fact_metric (29)
    on left: 13, on right: 7
trace_step (30)
    on left: 14, on right: 4
metric (31)
    on left: 15 16 17 18, on right: 13 14
cvss_metric (32)
    on left: 19, on right: 17
cap_metric (33)
    on left: 20, on right: 18
attack_fact (34)
    on left: 21, on right: 5
special_char (35)
    on left: 22 23 24 25 26, on right: 29
quoted_name (36)
    on left: 27 28 29, on right: 28 29 36
desc (37)
    on left: 30 31 32, on right: 14 32
arglist (38)
    on left: 33 34, on right: 34 40
factString (39)
    on left: 35 36, on right: 33 34
facts (40)
    on left: 37 38 39, on right: 39 41
fact (41)
    on left: 40, on right: 13 14 21 38 39
conjunct (42)
    on left: 41, on right: 14


state 0

    0 $accept: . lines $end

    $default  reduce using rule 1 (lines)

    lines  go to state 1


state 1

    0 $accept: lines . $end
    2 lines: lines . line

    $end             shift, and go to state 2
    ATTACK_TOKEN     shift, and go to state 3
    TRACESTEP_TOKEN  shift, and go to state 4
    SP               shift, and go to state 5
    END_LINE         shift, and go to state 6
    PRIMITIVE        shift, and go to state 7
    DERIVED          shift, and go to state 8
    META             shift, and go to state 9
    METRIC           shift, and go to state 10

    line            go to state 11
    blank_line      go to state 12
    predicate_type  go to state 13
    fact_metric     go to state 14
    trace_step      go to state 15
    attack_fact     go to state 16


state 2

    0 $accept: lines $end .

    $default  accept


state 3

   21 attack_fact: ATTACK_TOKEN . '(' fact ')' '.' END_LINE

    '('  shift, and go to state 17


state 4

   14 trace_step: TRACESTEP_TOKEN . '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    '('  shift, and go to state 18


state 5

    9 blank_line: SP . END_LINE

    END_LINE  shift, and go to state 19


state 6

    8 blank_line: END_LINE .

    $default  reduce using rule 8 (blank_line)


state 7

   10 predicate_type: PRIMITIVE . '(' ATOM ',' ATOM ')' '.' END_LINE

    '('  shift, and go to state 20


state 8

   11 predicate_type: DERIVED . '(' ATOM ',' ATOM ')' '.' END_LINE

    '('  shift, and go to state 21


state 9

   12 predicate_type: META . '(' ATOM ',' ATOM ')' '.' END_LINE

    '('  shift, and go to state 22


state 10

   13 fact_metric: METRIC . '(' fact ',' metric ')' '.' END_LINE

    '('  shift, and go to state 23


state 11

    2 lines: lines line .

    $default  reduce using rule 2 (lines)


state 12

    3 line: blank_line .

    $default  reduce using rule 3 (line)


state 13

    6 line: predicate_type .

    $default  reduce using rule 6 (line)


state 14

    7 line: fact_metric .

    $default  reduce using rule 7 (line)


state 15

    4 line: trace_step .

    $default  reduce using rule 4 (line)


state 16

    5 line: attack_fact .

    $default  reduce using rule 5 (line)


state 17

   21 attack_fact: ATTACK_TOKEN '(' . fact ')' '.' END_LINE

    ATOM  shift, and go to state 24

    fact  go to state 25


state 18

   14 trace_step: TRACESTEP_TOKEN '(' . BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    BECAUSE_TOKEN  shift, and go to state 26


state 19

    9 blank_line: SP END_LINE .

    $default  reduce using rule 9 (blank_line)


state 20

   10 predicate_type: PRIMITIVE '(' . ATOM ',' ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 27


state 21

   11 predicate_type: DERIVED '(' . ATOM ',' ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 28


state 22

   12 predicate_type: META '(' . ATOM ',' ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 29


state 23

   13 fact_metric: METRIC '(' . fact ',' metric ')' '.' END_LINE

    ATOM  shift, and go to state 24

    fact  go to state 30


state 24

   40 fact: ATOM . '(' arglist ')'

    '('  shift, and go to state 31


state 25

   21 attack_fact: ATTACK_TOKEN '(' fact . ')' '.' END_LINE

    ')'  shift, and go to state 32


state 26

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN . '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    '('  shift, and go to state 33


state 27

   10 predicate_type: PRIMITIVE '(' ATOM . ',' ATOM ')' '.' END_LINE

    ','  shift, and go to state 34


state 28

   11 predicate_type: DERIVED '(' ATOM . ',' ATOM ')' '.' END_LINE

    ','  shift, and go to state 35


state 29

   12 predicate_type: META '(' ATOM . ',' ATOM ')' '.' END_LINE

    ','  shift, and go to state 36


state 30

   13 fact_metric: METRIC '(' fact . ',' metric ')' '.' END_LINE

    ','  shift, and go to state 37


state 31

   40 fact: ATOM '(' . arglist ')'

    ATOM   shift, and go to state 38
    QUOTE  shift, and go to state 39

    arglist     go to state 40
    factString  go to state 41


state 32

   21 attack_fact: ATTACK_TOKEN '(' fact ')' . '.' END_LINE

    '.'  shift, and go to state 42


state 33

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' . ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ATOM  shift, and go to state 43


state 34

   10 predicate_type: PRIMITIVE '(' ATOM ',' . ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 44


state 35

   11 predicate_type: DERIVED '(' ATOM ',' . ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 45


state 36

   12 predicate_type: META '(' ATOM ',' . ATOM ')' '.' END_LINE

    ATOM  shift, and go to state 46


state 37

   13 fact_metric: METRIC '(' fact ',' . metric ')' '.' END_LINE

    ATOM      shift, and go to state 47
    FLOAT     shift, and go to state 48
    CVSS_AC   shift, and go to state 49
    CAP_LUCK  shift, and go to state 50

    metric       go to state 51
    cvss_metric  go to state 52
    cap_metric   go to state 53


state 38

   35 factString: ATOM .

    $default  reduce using rule 35 (factString)


state 39

   36 factString: QUOTE . quoted_name QUOTE

    ATOM  shift, and go to state 54

    quoted_name  go to state 55


state 40

   34 arglist: arglist . ',' factString
   40 fact: ATOM '(' arglist . ')'

    ','  shift, and go to state 56
    ')'  shift, and go to state 57


state 41

   33 arglist: factString .

    $default  reduce using rule 33 (arglist)


state 42

   21 attack_fact: ATTACK_TOKEN '(' fact ')' '.' . END_LINE

    END_LINE  shift, and go to state 58


state 43

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM . ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ','  shift, and go to state 59


state 44

   10 predicate_type: PRIMITIVE '(' ATOM ',' ATOM . ')' '.' END_LINE

    ')'  shift, and go to state 60


state 45

   11 predicate_type: DERIVED '(' ATOM ',' ATOM . ')' '.' END_LINE

    ')'  shift, and go to state 61


state 46

   12 predicate_type: META '(' ATOM ',' ATOM . ')' '.' END_LINE

    ')'  shift, and go to state 62


state 47

   15 metric: ATOM .

    $default  reduce using rule 15 (metric)


state 48

   16 metric: FLOAT .

    $default  reduce using rule 16 (metric)


state 49

   19 cvss_metric: CVSS_AC . '(' ATOM ')'

    '('  shift, and go to state 63


state 50

   20 cap_metric: CAP_LUCK . '(' ATOM ')'

    '('  shift, and go to state 64


state 51

   13 fact_metric: METRIC '(' fact ',' metric . ')' '.' END_LINE

    ')'  shift, and go to state 65


state 52

   17 metric: cvss_metric .

    $default  reduce using rule 17 (metric)


state 53

   18 metric: cap_metric .

    $default  reduce using rule 18 (metric)


state 54

   27 quoted_name: ATOM .

    $default  reduce using rule 27 (quoted_name)


state 55

   28 quoted_name: quoted_name . ATOM
   29            | quoted_name . special_char
   36 factString: QUOTE quoted_name . QUOTE

    ATOM   shift, and go to state 66
    QUOTE  shift, and go to state 67
    SP     shift, and go to state 68
    '('    shift, and go to state 69
    ')'    shift, and go to state 70
    '['    shift, and go to state 71
    ']'    shift, and go to state 72

    special_char  go to state 73


state 56

   34 arglist: arglist ',' . factString

    ATOM   shift, and go to state 38
    QUOTE  shift, and go to state 39

    factString  go to state 74


state 57

   40 fact: ATOM '(' arglist ')' .

    $default  reduce using rule 40 (fact)


state 58

   21 attack_fact: ATTACK_TOKEN '(' fact ')' '.' END_LINE .

    $default  reduce using rule 21 (attack_fact)


state 59

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' . DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    DESC  shift, and go to state 75


state 60

   10 predicate_type: PRIMITIVE '(' ATOM ',' ATOM ')' . '.' END_LINE

    '.'  shift, and go to state 76


state 61

   11 predicate_type: DERIVED '(' ATOM ',' ATOM ')' . '.' END_LINE

    '.'  shift, and go to state 77


state 62

   12 predicate_type: META '(' ATOM ',' ATOM ')' . '.' END_LINE

    '.'  shift, and go to state 78


state 63

   19 cvss_metric: CVSS_AC '(' . ATOM ')'

    ATOM  shift, and go to state 79


state 64

   20 cap_metric: CAP_LUCK '(' . ATOM ')'

    ATOM  shift, and go to state 80


state 65

   13 fact_metric: METRIC '(' fact ',' metric ')' . '.' END_LINE

    '.'  shift, and go to state 81


state 66

   28 quoted_name: quoted_name ATOM .

    $default  reduce using rule 28 (quoted_name)


state 67

   36 factString: QUOTE quoted_name QUOTE .

    $default  reduce using rule 36 (factString)


state 68

   22 special_char: SP .

    $default  reduce using rule 22 (special_char)


state 69

   23 special_char: '(' .

    $default  reduce using rule 23 (special_char)


state 70

   24 special_char: ')' .

    $default  reduce using rule 24 (special_char)


state 71

   25 special_char: '[' .

    $default  reduce using rule 25 (special_char)


state 72

   26 special_char: ']' .

    $default  reduce using rule 26 (special_char)


state 73

   29 quoted_name: quoted_name special_char .

    $default  reduce using rule 29 (quoted_name)


state 74

   34 arglist: arglist ',' factString .

    $default  reduce using rule 34 (arglist)


state 75

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC . '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    '('  shift, and go to state 82


state 76

   10 predicate_type: PRIMITIVE '(' ATOM ',' ATOM ')' '.' . END_LINE

    END_LINE  shift, and go to state 83


state 77

   11 predicate_type: DERIVED '(' ATOM ',' ATOM ')' '.' . END_LINE

    END_LINE  shift, and go to state 84


state 78

   12 predicate_type: META '(' ATOM ',' ATOM ')' '.' . END_LINE

    END_LINE  shift, and go to state 85


state 79

   19 cvss_metric: CVSS_AC '(' ATOM . ')'

    ')'  shift, and go to state 86


state 80

   20 cap_metric: CAP_LUCK '(' ATOM . ')'

    ')'  shift, and go to state 87


state 81

   13 fact_metric: METRIC '(' fact ',' metric ')' '.' . END_LINE

    END_LINE  shift, and go to state 88


state 82

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' . QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    QUOTE  shift, and go to state 89


state 83

   10 predicate_type: PRIMITIVE '(' ATOM ',' ATOM ')' '.' END_LINE .

    $default  reduce using rule 10 (predicate_type)


state 84

   11 predicate_type: DERIVED '(' ATOM ',' ATOM ')' '.' END_LINE .

    $default  reduce using rule 11 (predicate_type)


state 85

   12 predicate_type: META '(' ATOM ',' ATOM ')' '.' END_LINE .

    $default  reduce using rule 12 (predicate_type)


state 86

   19 cvss_metric: CVSS_AC '(' ATOM ')' .

    $default  reduce using rule 19 (cvss_metric)


state 87

   20 cap_metric: CAP_LUCK '(' ATOM ')' .

    $default  reduce using rule 20 (cap_metric)


state 88

   13 fact_metric: METRIC '(' fact ',' metric ')' '.' END_LINE .

    $default  reduce using rule 13 (fact_metric)


state 89

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE . desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ATOM  shift, and go to state 90

    $default  reduce using rule 30 (desc)

    desc  go to state 91


state 90

   31 desc: ATOM .

    $default  reduce using rule 31 (desc)


state 91

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc . QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE
   32 desc: desc . SP ATOM

    QUOTE  shift, and go to state 92
    SP     shift, and go to state 93


state 92

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE . ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ','  shift, and go to state 94


state 93

   32 desc: desc SP . ATOM

    ATOM  shift, and go to state 95


state 94

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' . metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ATOM      shift, and go to state 47
    FLOAT     shift, and go to state 48
    CVSS_AC   shift, and go to state 49
    CAP_LUCK  shift, and go to state 50

    metric       go to state 96
    cvss_metric  go to state 52
    cap_metric   go to state 53


state 95

   32 desc: desc SP ATOM .

    $default  reduce using rule 32 (desc)


state 96

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric . ')' ',' fact ',' conjunct ')' ')' '.' END_LINE

    ')'  shift, and go to state 97


state 97

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' . ',' fact ',' conjunct ')' ')' '.' END_LINE

    ','  shift, and go to state 98


state 98

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' . fact ',' conjunct ')' ')' '.' END_LINE

    ATOM  shift, and go to state 24

    fact  go to state 99


state 99

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact . ',' conjunct ')' ')' '.' END_LINE

    ','  shift, and go to state 100


state 100

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' . conjunct ')' ')' '.' END_LINE

    '['  shift, and go to state 101

    conjunct  go to state 102


state 101

   41 conjunct: '[' . facts ']'

    ATOM  shift, and go to state 24

    $default  reduce using rule 37 (facts)

    facts  go to state 103
    fact   go to state 104


state 102

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct . ')' ')' '.' END_LINE

    ')'  shift, and go to state 105


state 103

   39 facts: facts . ',' fact
   41 conjunct: '[' facts . ']'

    ','  shift, and go to state 106
    ']'  shift, and go to state 107


state 104

   38 facts: fact .

    $default  reduce using rule 38 (facts)


state 105

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' . ')' '.' END_LINE

    ')'  shift, and go to state 108


state 106

   39 facts: facts ',' . fact

    ATOM  shift, and go to state 24

    fact  go to state 109


state 107

   41 conjunct: '[' facts ']' .

    $default  reduce using rule 41 (conjunct)


state 108

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' . '.' END_LINE

    '.'  shift, and go to state 110


state 109

   39 facts: facts ',' fact .

    $default  reduce using rule 39 (facts)


state 110

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' . END_LINE

    END_LINE  shift, and go to state 111


state 111

   14 trace_step: TRACESTEP_TOKEN '(' BECAUSE_TOKEN '(' ATOM ',' DESC '(' QUOTE desc QUOTE ',' metric ')' ',' fact ',' conjunct ')' ')' '.' END_LINE .

    $default  reduce using rule 14 (trace_step)
